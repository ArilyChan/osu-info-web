'use strict';Object.defineProperty(exports,'__esModule',{value:true});/**************************************************************************
 * DATA > PLACES
 ***************************************************************************/

var countries = [
  { code: "ad", name: "Andorra" },
  { code: "ae", name: "United Arab Emirates" },
  { code: "af", name: "Afghanistan" },
  { code: "ag", name: "Antigua and Barbuda" },
  { code: "ai", name: "Anguilla" },
  { code: "al", name: "Albania" },
  { code: "am", name: "Armenia" },
  { code: "ao", name: "Angola" },
  { code: "aq", name: "Antarctica" },
  { code: "ar", name: "Argentina" },
  { code: "as", name: "American Samoa" },
  { code: "at", name: "Austria" },
  { code: "au", name: "Australia" },
  { code: "aw", name: "Aruba" },
  { code: "ax", name: "Åland Islands" },
  { code: "az", name: "Azerbaijan" },
  { code: "ba", name: "Bosnia and Herzegovina" },
  { code: "bb", name: "Barbados" },
  { code: "bd", name: "Bangladesh" },
  { code: "be", name: "Belgium" },
  { code: "bf", name: "Burkina Faso" },
  { code: "bg", name: "Bulgaria" },
  { code: "bh", name: "Bahrain" },
  { code: "bi", name: "Burundi" },
  { code: "bj", name: "Benin" },
  { code: "bl", name: "Saint Barthélemy" },
  { code: "bm", name: "Bermuda" },
  { code: "bn", name: "Brunei Darussalam" },
  { code: "bo", name: "Bolivia" },
  { code: "bq", name: "Bonaire, Sint Eustatius and Saba" },
  { code: "br", name: "Brazil" },
  { code: "bs", name: "Bahamas" },
  { code: "bt", name: "Bhutan" },
  { code: "bv", name: "Bouvet Island" },
  { code: "bw", name: "Botswana" },
  { code: "by", name: "Belarus" },
  { code: "bz", name: "Belize" },
  { code: "ca", name: "Canada" },
  { code: "cc", name: "Cocos (Keeling) Islands" },
  { code: "cd", name: "Democratic Republic of the Congo" },
  { code: "cf", name: "Central African Republic" },
  { code: "cg", name: "Congo" },
  { code: "ch", name: "Switzerland" },
  { code: "ci", name: "Côte d'Ivoire" },
  { code: "ck", name: "Cook Islands" },
  { code: "cl", name: "Chile" },
  { code: "cm", name: "Cameroon" },
  { code: "cn", name: "China" },
  { code: "co", name: "Colombia" },
  { code: "cr", name: "Costa Rica" },
  { code: "cu", name: "Cuba" },
  { code: "cv", name: "Cabo Verde" },
  { code: "cw", name: "Curaçao" },
  { code: "cx", name: "Christmas Island" },
  { code: "cy", name: "Cyprus" },
  { code: "cz", name: "Czechia" },
  { code: "de", name: "Germany" },
  { code: "dj", name: "Djibouti" },
  { code: "dk", name: "Denmark" },
  { code: "dm", name: "Dominica" },
  { code: "do", name: "Dominican Republic" },
  { code: "dz", name: "Algeria" },
  { code: "ec", name: "Ecuador" },
  { code: "ee", name: "Estonia" },
  { code: "eg", name: "Egypt" },
  { code: "eh", name: "Western Sahara" },
  { code: "er", name: "Eritrea" },
  { code: "es", name: "Spain" },
  { code: "et", name: "Ethiopia" },
  { code: "fi", name: "Finland" },
  { code: "fj", name: "Fiji" },
  { code: "fk", name: "Falkland Islands (Malvinas)" },
  { code: "fm", name: "Micronesia" },
  { code: "fo", name: "Faroe Islands" },
  { code: "fr", name: "France" },
  { code: "ga", name: "Gabon" },
  { code: "gb", name: "Great Britain" },
  { code: "gd", name: "Grenada" },
  { code: "ge", name: "Georgia" },
  { code: "gf", name: "French Guiana" },
  { code: "gg", name: "Guernsey" },
  { code: "gh", name: "Ghana" },
  { code: "gi", name: "Gibraltar" },
  { code: "gl", name: "Greenland" },
  { code: "gm", name: "Gambia" },
  { code: "gn", name: "Guinea" },
  { code: "gp", name: "Guadeloupe" },
  { code: "gq", name: "Equatorial Guinea" },
  { code: "gr", name: "Greece" },
  { code: "gs", name: "South Georgia and the South Sandwich Islands" },
  { code: "gt", name: "Guatemala" },
  { code: "gu", name: "Guam" },
  { code: "gw", name: "Guinea-Bissau" },
  { code: "gy", name: "Guyana" },
  { code: "hk", name: "Hong Kong" },
  { code: "hm", name: "Heard Island and McDonald Islands" },
  { code: "hn", name: "Honduras" },
  { code: "hr", name: "Croatia" },
  { code: "ht", name: "Haiti" },
  { code: "hu", name: "Hungary" },
  { code: "id", name: "Indonesia" },
  { code: "ie", name: "Ireland" },
  { code: "il", name: "Israel" },
  { code: "im", name: "Isle of Man" },
  { code: "in", name: "India" },
  { code: "io", name: "British Indian Ocean Territory" },
  { code: "iq", name: "Iraq" },
  { code: "ir", name: "Iran" },
  { code: "is", name: "Iceland" },
  { code: "it", name: "Italy" },
  { code: "je", name: "Jersey" },
  { code: "jm", name: "Jamaica" },
  { code: "jo", name: "Jordan" },
  { code: "jp", name: "Japan" },
  { code: "ke", name: "Kenya" },
  { code: "kg", name: "Kyrgyzstan" },
  { code: "kh", name: "Cambodia" },
  { code: "ki", name: "Kiribati" },
  { code: "km", name: "Comoros" },
  { code: "kn", name: "Saint Kitts and Nevis" },
  { code: "kp", name: "North Korea" },
  { code: "kr", name: "South Korea" },
  { code: "kw", name: "Kuwait" },
  { code: "ky", name: "Cayman Islands" },
  { code: "kz", name: "Kazakhstan" },
  { code: "la", name: "Laos" },
  { code: "lb", name: "Lebanon" },
  { code: "lc", name: "Saint Lucia" },
  { code: "li", name: "Liechtenstein" },
  { code: "lk", name: "Sri Lanka" },
  { code: "lr", name: "Liberia" },
  { code: "ls", name: "Lesotho" },
  { code: "lt", name: "Lithuania" },
  { code: "lu", name: "Luxembourg" },
  { code: "lv", name: "Latvia" },
  { code: "ly", name: "Libya" },
  { code: "ma", name: "Morocco" },
  { code: "mc", name: "Monaco" },
  { code: "md", name: "Moldova" },
  { code: "me", name: "Montenegro" },
  { code: "mf", name: "Saint Martin (French)" },
  { code: "mg", name: "Madagascar" },
  { code: "mh", name: "Marshall Islands" },
  { code: "mk", name: "North Macedonia" },
  { code: "ml", name: "Mali" },
  { code: "mm", name: "Myanmar" },
  { code: "mn", name: "Mongolia" },
  { code: "mo", name: "Macao" },
  { code: "mp", name: "Northern Mariana Islands" },
  { code: "mq", name: "Martinique" },
  { code: "mr", name: "Mauritania" },
  { code: "ms", name: "Montserrat" },
  { code: "mt", name: "Malta" },
  { code: "mu", name: "Mauritius" },
  { code: "mv", name: "Maldives" },
  { code: "mw", name: "Malawi" },
  { code: "mx", name: "Mexico" },
  { code: "my", name: "Malaysia" },
  { code: "mz", name: "Mozambique" },
  { code: "na", name: "Namibia" },
  { code: "nc", name: "New Caledonia" },
  { code: "ne", name: "Niger" },
  { code: "nf", name: "Norfolk Island" },
  { code: "ng", name: "Nigeria" },
  { code: "ni", name: "Nicaragua" },
  { code: "nl", name: "Netherlands" },
  { code: "no", name: "Norway" },
  { code: "np", name: "Nepal" },
  { code: "nr", name: "Nauru" },
  { code: "nu", name: "Niue" },
  { code: "nz", name: "New Zealand" },
  { code: "om", name: "Oman" },
  { code: "pa", name: "Panama" },
  { code: "pe", name: "Peru" },
  { code: "pf", name: "French Polynesia" },
  { code: "pg", name: "Papua New Guinea" },
  { code: "ph", name: "Philippines" },
  { code: "pk", name: "Pakistan" },
  { code: "pl", name: "Poland" },
  { code: "pm", name: "Saint Pierre and Miquelon" },
  { code: "pn", name: "Pitcairn" },
  { code: "pr", name: "Puerto Rico" },
  { code: "ps", name: "Palestine" },
  { code: "pt", name: "Portugal" },
  { code: "pw", name: "Palau" },
  { code: "py", name: "Paraguay" },
  { code: "qa", name: "Qatar" },
  { code: "re", name: "Réunion" },
  { code: "ro", name: "Romania" },
  { code: "rs", name: "Serbia" },
  { code: "ru", name: "Russia" },
  { code: "rw", name: "Rwanda" },
  { code: "sa", name: "Saudi Arabia" },
  { code: "sb", name: "Solomon Islands" },
  { code: "sc", name: "Seychelles" },
  { code: "sd", name: "Sudan" },
  { code: "se", name: "Sweden" },
  { code: "sg", name: "Singapore" },
  { code: "sh", name: "Saint Helena, Ascension and Tristan da Cunha" },
  { code: "si", name: "Slovenia" },
  { code: "sj", name: "Svalbard and Jan Mayen" },
  { code: "sk", name: "Slovakia" },
  { code: "sl", name: "Sierra Leone" },
  { code: "sm", name: "San Marino" },
  { code: "sn", name: "Senegal" },
  { code: "so", name: "Somalia" },
  { code: "sr", name: "Suriname" },
  { code: "ss", name: "South Sudan" },
  { code: "st", name: "Sao Tome and Principe" },
  { code: "sv", name: "El Salvador" },
  { code: "sx", name: "Sint Maarten (Dutch)" },
  { code: "sy", name: "Syrian Arab Republic" },
  { code: "sz", name: "Eswatini" },
  { code: "tc", name: "Turks and Caicos Islands" },
  { code: "td", name: "Chad" },
  { code: "tf", name: "French Southern Territories" },
  { code: "tg", name: "Togo" },
  { code: "th", name: "Thailand" },
  { code: "tj", name: "Tajikistan" },
  { code: "tk", name: "Tokelau" },
  { code: "tl", name: "Timor-Leste" },
  { code: "tm", name: "Turkmenistan" },
  { code: "tn", name: "Tunisia" },
  { code: "to", name: "Tonga" },
  { code: "tr", name: "Turkey" },
  { code: "tt", name: "Trinidad and Tobago" },
  { code: "tv", name: "Tuvalu" },
  { code: "tw", name: "Taiwan" },
  { code: "tz", name: "Tanzania" },
  { code: "ua", name: "Ukraine" },
  { code: "ug", name: "Uganda" },
  { code: "um", name: "United States Minor Outlying Islands" },
  { code: "us", name: "The United States" },
  { code: "uy", name: "Uruguay" },
  { code: "uz", name: "Uzbekistan" },
  { code: "va", name: "Holy See" },
  { code: "vc", name: "Saint Vincent and the Grenadines" },
  { code: "ve", name: "Venezuela" },
  { code: "vg", name: "Virgin Islands (British)" },
  { code: "vi", name: "Virgin Islands (U.S.)" },
  { code: "vn", name: "Viet Nam" },
  { code: "vu", name: "Vanuatu" },
  { code: "wf", name: "Wallis and Futuna" },
  { code: "ws", name: "Samoa" },
  { code: "ye", name: "Yemen" },
  { code: "yt", name: "Mayotte" },
  { code: "za", name: "South Africa" },
  { code: "zm", name: "Zambia" },
  { code: "zw", name: "Zimbabwe" }
];//

var script = {
  props: {
    code: {
      type: String,
      required: true
    },
    height: {
      type: String,
      default: null
    },
    iconPath: {
      type: String,
      default: null
    },
    size: {
      type: String,
      default: "default",
      validator: function validator(x) {
        return ["nano", "micro", "mini", "small", "default", "medium", "large", "huge"].includes(x)
      }
    },
    width: {
      type: String,
      default: null
    }
  },

  computed: {
    path: function path() {
      var code = (this.code || "").toLowerCase();
      var path = this.$gb.vueflags.iconPath || this.iconPath || "";

      // Remove last character if slash
      path = path.replace(/\/$/, "");

      // Use fallback flag
      var countryCodes = countries.map(function (country) { return country.code; });

      if (!countryCodes.includes(code)) {
        code = "unknown";
      }

      return (path + "/" + code + ".svg")
    }
  },

  methods: {
    // --> EVENT LISTENERS <--

    onClick: function onClick(event) {
      this.$emit("click", event);
    }
  }
};function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    var options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    var hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            var originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            var existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}function createInjectorSSR(context) {
    if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
    }
    if (!context)
        { return function () { }; }
    if (!('styles' in context)) {
        context._styles = context._styles || {};
        Object.defineProperty(context, 'styles', {
            enumerable: true,
            get: function () { return context._renderStyles(context._styles); }
        });
        context._renderStyles = context._renderStyles || renderStyles;
    }
    return function (id, style) { return addStyle(id, style, context); };
}
function addStyle(id, css, context) {
    var group =  css.media || 'default' ;
    var style = context._styles[group] || (context._styles[group] = { ids: [], css: '' });
    if (!style.ids.includes(id)) {
        style.media = css.media;
        style.ids.push(id);
        var code = css.source;
        style.css += code + '\n';
    }
}
function renderStyles(styles) {
    var css = '';
    for (var key in styles) {
        var style = styles[key];
        css +=
            '<style data-vue-ssr-id="' +
                Array.from(style.ids).join(' ') +
                '"' +
                (style.media ? ' media="' + style.media + '"' : '') +
                '>' +
                style.css +
                '</style>';
    }
    return css;
}/* script */
var __vue_script__ = script;

/* template */
var __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('img',{class:[
    "gb-flag",
    "gb-flag--" + _vm.size,
    {
      "gb-flag--clickable": _vm.$listeners.click
    }
  ],style:({
    height: _vm.height,
    width: _vm.width
  }),attrs:{"src":_vm.path}},[])};
var __vue_staticRenderFns__ = [];

  /* style */
  var __vue_inject_styles__ = function (inject) {
    if (!inject) { return }
    inject("data-v-d8da6d30_0", { source: ".gb-flag{display:inline-block;background-size:cover;background-repeat:no-repeat;user-select:none}.gb-flag--nano{height:10px}.gb-flag--micro{height:15px}.gb-flag--mini{height:20px}.gb-flag--small{height:25px}.gb-flag--default{height:30px}.gb-flag--medium{height:35px}.gb-flag--large{height:40px}.gb-flag--huge{height:45px}.gb-flag--clickable{cursor:pointer}", map: undefined, media: undefined });

  };
  /* scoped */
  var __vue_scope_id__ = undefined;
  /* module identifier */
  var __vue_module_identifier__ = "data-v-d8da6d30";
  /* functional template */
  var __vue_is_functional_template__ = false;
  /* style inject shadow dom */
  

  
  var __vue_component__ = normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    createInjectorSSR,
    undefined
  );/**************************************************************************
 * IMPORTS
 ***************************************************************************/

/**************************************************************************
 * ENVIRONMENT CONFIGURATIONS
 ***************************************************************************/

// install function executed by Vue.use()
function install(Vue, options) {
  if (install.installed) {
    return
  } else {
    install.installed = true;
  }

  // Declare the component
  Vue.component("gb-flag", __vue_component__);

  // Create growthbunker namespace
  if (!Vue.prototype.$gb) {
    Vue.prototype.$gb = {};
  }

  // Set global options for the package
  Vue.prototype.$gb.vueflags = {};
  Vue.prototype.$gb.vueflags.iconPath = (options || {}).iconPath || null;
}

// Create module definition for Vue.use()
var plugin = {
  install: install
};

// To auto-install when vue is found
/* global window global */
var GlobalVue = null;

if (typeof window !== "undefined") {
  GlobalVue = window.Vue;
} else if (typeof global !== "undefined") {
  GlobalVue = global.Vue;
}

if (GlobalVue) {
  GlobalVue.use(plugin);
}

var countryCodes = countries.map(function (country) { return country.code; });
var countryNames = countries.map(function (country) { return country.names; });exports.countries=countries;exports.countryCodes=countryCodes;exports.countryNames=countryNames;exports.default=plugin;